if (self.CavalryLogger) { CavalryLogger.start_js(["VVL6Q"]); }

__d('EmojiInputButton.react',['fbt','Bootloader','Focus','Link.react','React','createCancelableFunction','joinClasses'],(function a(b,c,d,e,f,g,h){'use strict';var i,j,k=null;i=babelHelpers.inherits(l,c('React').Component);j=i&&i.prototype;function l(m){j.constructor.call(this,m);this.$EmojiInputButton4=function(event){event.preventDefault();event.stopPropagation();this.props.onClick&&this.props.onClick();this.setState({locked:false,visible:!this.state.locked?!this.state.visible:false});}.bind(this);this.$EmojiInputButton5=function(event){this.setState({locked:this.state.visible});}.bind(this);this.$EmojiInputButton7=function(n){if(!n)this.setState({visible:false});}.bind(this);this.state={locked:false,visible:false};}l.prototype.componentDidMount=function(){if(this.$EmojiInputButton3&&this.$EmojiInputButton2)c('Focus').relocate(this.$EmojiInputButton3,this.$EmojiInputButton2);};l.prototype.componentWillUnmount=function(){this.$EmojiInputButton1&&this.$EmojiInputButton1.cancel();this.$EmojiInputButton1=null;};l.prototype.render=function(){var m=h._("Insert an emoji"),n=this.state.visible?c('joinClasses')(this.props.iconActiveClassName,this.props.iconClassName):this.props.iconClassName;return c('React').createElement(c('Link.react'),{'aria-label':m,className:this.props.buttonClassName,'data-hover':'tooltip','data-tooltip-alignh':'center','data-tooltip-content':!this.state.visible?m:null,onClick:this.$EmojiInputButton4,onDragStart:function o(p){return p.preventDefault();},onMouseDown:this.$EmojiInputButton5,linkRef:function(o){return this.$EmojiInputButton3=o;}.bind(this),role:'button'},c('React').createElement('div',{className:n,ref:function(o){return this.$EmojiInputButton2=o;}.bind(this)}),this.$EmojiInputButton6());};l.prototype.$EmojiInputButton6=function(){if(!k){if(this.state.visible){this.$EmojiInputButton1=c('createCancelableFunction')(function(){this.forceUpdate();}.bind(this));c('Bootloader').loadModules(["EmojiPicker.react"],function(m){k=m;if(this.$EmojiInputButton1){this.$EmojiInputButton1();this.$EmojiInputButton1=null;}}.bind(this),'EmojiInputButton.react');}return null;}return (c('React').createElement(k,{context:this.$EmojiInputButton3,onToggle:this.$EmojiInputButton7,onSelect:this.props.onSelect,shown:this.state.visible}));};f.exports=l;}),null);
__d('addEmojiToEditorState',['DraftModifier','EditorState','EmojiFormat','emptyFunction'],(function a(b,c,d,e,f,g){'use strict';function h(i,j){var k=arguments.length<=2||arguments[2]===undefined?c('emptyFunction'):arguments[2];if(typeof i!=='string')i=c('EmojiFormat').codeArrayToUnicode(i);var l=c('DraftModifier').replaceText(j.getCurrentContent(),j.getSelection(),i),m=c('EditorState').push(j,l,'insert-characters');if(m!==j)k(c('EditorState').forceSelection(m,l.getSelectionAfter()));return m;}f.exports=h;}),null);